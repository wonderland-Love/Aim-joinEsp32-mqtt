{"version":3,"sources":["esp32api.js","route-constants.js","pages/Home.jsx","components/Car.jsx","pages/Cars/FirstCar.jsx","pages/Cars/SecondCar.jsx","pages/Cars/ThirdCar.jsx","pages/Cars/FourthCar.jsx","components/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","LonganCore1","passage","message","Up","Down","Left","Right","Stop","Lifting","Pitching","LonganCore2","LonganCore3","LonganCore4","Home_router","First_car_router","Second_car_router","Third_car_router","Fourth_car_router","routerLink","time","isClick","Home","navigate","useNavigate","React","openBackground","setOpenBackground","BackgroundClose","useState","client","setClient","router_to_","set_outer_to_","open","setOpen","undefined","transition","setTransition","Machines","machinesArr","TransitionDown","value","Slide","direction","handleClick","Transition","useEffect","newClient","mqtt","connect","handleSubscribe","topic","console","log","subscribe","err","publish","setTimeout","handleReceiveMessage","str","toString","clearTimeout","preState","on","off","Box","sx","contents","Backdrop","color","zIndex","theme","drawer","CircularProgress","Snackbar","onClose","TransitionComponent","name","width","container","map","item","index","background","borderRadius","margin","display","alignContent","flexDirection","alignItems","justifyContent","xs","onClick","fontSize","height","rightButtonStyle","userSelect","mt","mb","fullWidth","Car","props","urlStr","clientRef","useRef","current","end","start","setStart","setEnd","window","count","setCount","timer","setInterval","c","clearInterval","handleSendMessage","JoystickDirection","moveRecords","setMoveRecords","LinearProgress","size","stickSize","sticky","baseColor","stickColor","move","eve","e","handleMove","stop","Button","variant","FirstCar","SecondCar","ThirdCar","FourthCar","Layout","children","style","position","top","left","transform","bgcolor","boxShadow","p","App","handleOrientationChange","matchMedia","matches","addEventListener","removeEventListener","Modal","disableAutoFocus","Typography","id","component","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5f265506.chunk.js","sourcesContent":["// 请求 Request\n\n// export const url = \"wss://yinxi:gndp3106@mqtt.longan.link:8084/mqtt\";\nexport const url = \"wss://junyan:elite_392101@mqtt.longan.link:8084/mqtt\";\nexport const LonganCore1 = {\n  passage: \"LonganCore1\",\n  message: {\n    Up: \"Up\",\n    Down: \"Down\",\n    Left: \"Left\",\n    Right: \"Right\",\n    Stop: \"Stop\",\n    Lifting: \"Lifting\",\n    Pitching: \"Pitching\",\n  },\n};\n\nexport const LonganCore2 = {\n  passage: \"LonganCore2\",\n  message: {\n    Up: \"Up\",\n    Down: \"Down\",\n    Left: \"Left\",\n    Right: \"Right\",\n    Stop: \"Stop\",\n    Lifting: \"Lifting\",\n    Pitching: \"Pitching\",\n  },\n};\n\nexport const LonganCore3 = {\n  passage: \"LonganCore3\",\n  message: {\n    Up: \"Up\",\n    Down: \"Down\",\n    Left: \"Left\",\n    Right: \"Right\",\n    Stop: \"Stop\",\n    Lifting: \"Lifting\",\n    Pitching: \"Pitching\",\n  },\n};\n\nexport const LonganCore4 = {\n  passage: \"LonganCore4\",\n  message: {\n    Up: \"Up\",\n    Down: \"Down\",\n    Left: \"Left\",\n    Right: \"Right\",\n    Stop: \"Stop\",\n    Lifting: \"Lifting\",\n    Pitching: \"Pitching\",\n  },\n};\n","export const Home_name = \"home\";\r\nexport const Home_router = \"/\";\r\n\r\nexport const First_car_name = \"FirstCar\";\r\nexport const First_car_router = \"/First-car\";\r\n\r\nexport const Second_car_name = \"SecondCar\";\r\nexport const Second_car_router = \"/Second-car\";\r\n\r\nexport const Third_car_name = \"ThirdCar\";\r\nexport const Third_car_router = \"/Third-car\";\r\n\r\nexport const Fourth_car_name = \"FourthCar\";\r\nexport const Fourth_car_router = \"/Fourth-car\";\r\n","import * as React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport DirectionsCarRoundedIcon from \"@mui/icons-material/DirectionsCarRounded\";\nimport { url } from \"../esp32api\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport mqtt from \"mqtt\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Slide from \"@mui/material/Slide\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport {\n  First_car_router,\n  Second_car_router,\n  Third_car_router,\n  Fourth_car_router,\n} from \"../route-constants\";\n\nimport {\n  LonganCore1,\n  LonganCore2,\n  LonganCore3,\n  LonganCore4,\n} from \"../esp32api\";\n\n// 主题\nconst passage = [\n  LonganCore1.passage,\n  LonganCore2.passage,\n  LonganCore3.passage,\n  LonganCore4.passage,\n];\n\n// 路由\nconst routerLink = [\n  First_car_router,\n  Second_car_router,\n  Third_car_router,\n  Fourth_car_router,\n];\n\nlet time = null;\nlet isClick = false;\n\nconst Home = () => {\n  const navigate = useNavigate();\n\n  const [openBackground, setOpenBackground] = React.useState(false);\n  const BackgroundClose = () => {\n    setOpenBackground(false);\n  };\n  const BackgroundDisplay = () => {\n    setOpenBackground(true);\n  };\n\n  const [client, setClient] = useState(null);\n  const [router_to_, set_outer_to_] = useState(\"\");\n\n  const [open, setOpen] = React.useState(false); // 控制 提示的开关\n  const [transition, setTransition] = React.useState(undefined); //过度动画\n\n  // const [Machines, setMachines] = useState(\"\"); //设备状态\n  let Machines = \"\";\n  const machinesArr = [\"该机器被使用中,请稍后再试...\", \"该机器没电了...\"];\n\n  const TransitionDown = (value) => {\n    return <Slide {...value} direction=\"down\" message={Machines} />;\n  };\n\n  // 打开提示\n  const handleClick = (Transition) => {\n    setOpen(true);\n    setTransition(() => Transition);\n  };\n\n  // 关闭提示\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // 初始化MQTT\n  useEffect(() => {\n    const newClient = mqtt.connect(url);\n    setClient(newClient);\n  }, []);\n\n  // 点击订阅主题\n  const handleSubscribe = (topic) => {\n    BackgroundDisplay();\n    isClick = true;\n    console.log(\"true_isclick\", isClick);\n\n    client.subscribe(topic, (err) => {\n      if (!err) {\n        client.publish(topic, \"Request\");\n        // 如果倒计时结束，无回应将会判定该设备没电\n        time = setTimeout(() => {\n          isClick = false;\n          console.log(\"null_isclick\", isClick);\n          BackgroundClose();\n          Machines = machinesArr[1];\n          handleClick(TransitionDown);\n        }, 5000);\n      }\n    });\n  };\n\n  // 收到的消息\n  const handleReceiveMessage = (topic, message) => {\n    const str = message.toString();\n    console.log(\"接收到的消息\", str, isClick);\n    if (isClick == true) {\n      if (str == \"Ok\") {\n        BackgroundClose();\n        clearTimeout(time);\n        isClick = false;\n        console.log(\"ok_isClick\", isClick);\n        set_outer_to_((preState) => {\n          navigate(preState);\n          return preState;\n        });\n      } else if (str == \"Error\") {\n        BackgroundClose();\n        clearTimeout(time);\n        Machines = machinesArr[0];\n        handleClick(TransitionDown);\n        isClick = false;\n        console.log(\"error_isClick\", isClick);\n      }\n    }\n  };\n\n  // client 如果变动 说明发送或者接收了消息\n  useEffect(() => {\n    if (!client) {\n      return;\n    }\n    client.on(\"message\", handleReceiveMessage);\n    return () => {\n      client.off(\"message\", handleReceiveMessage);\n    };\n  }, [client]);\n\n  return (\n    <>\n      <Box sx={contents}>\n        <Box>\n          <h1>Elite ESP32 Car</h1>\n          <h3>{router_to_}</h3>\n        </Box>\n        {/* 等待 背景  */}\n        <Backdrop\n          sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open={openBackground}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        {/* 消息弹出提示框 */}\n        <Snackbar\n          open={open}\n          onClose={handleClose}\n          TransitionComponent={transition}\n          message=\"I love snacks\"\n          key={transition ? transition.name : \"\"}\n        />\n        {/* 选择车辆 */}\n        <Grid sx={{ width: \"60%\" }} container>\n          {routerLink.map((item, index) => {\n            return (\n              <Grid\n                sx={{\n                  background: \"lightcoral\",\n                  borderRadius: \"16px\",\n                  margin: 1,\n                  display: \"flex\",\n                  alignContent: \"center\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                xs={5}\n                key={index}\n                onClick={() => {\n                  set_outer_to_(item);\n                  handleSubscribe(passage[index]);\n                }}\n              >\n                <Box>\n                  <DirectionsCarRoundedIcon sx={{ fontSize: 40 }} />\n                </Box>\n                <Box>{item}</Box>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default Home;\n\nconst contents = {\n  height: \"80vh\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n};\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { useState, useEffect, useRef } from \"react\";\nimport mqtt from \"mqtt\";\nimport { Joystick } from \"react-joystick-component\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\nfunction Car(props) {\n  // 通道 消息\n  const { urlStr, passage } = props;\n  const navigate = useNavigate();\n\n  const clientRef = useRef(null);\n\n  // 连接MQTT\n  useEffect(() => {\n    clientRef.current = mqtt.connect(urlStr);\n    clientRef.current.on(\"connect\", () => {\n      console.log(\"Connected to MQTT broker\");\n    });\n\n    return () => {\n      clientRef.current.end();\n    };\n  }, []);\n\n  //浏览器环境监测 用于判断移动端还是桌面端\n  const [start, setStart] = useState(\"onTouchStart\");\n  const [end, setEnd] = useState(\"onTouchEnd\");\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      if (\"ontouchstart\" in window) {\n        setStart(\"onTouchStart\");\n        setEnd(\"onTouchEnd\");\n      } else {\n        setStart(\"onMouseDown\");\n        setEnd(\"onMouseUp\");\n      }\n    }\n  }, []);\n\n  // 用于检测有没有在操作中，如果10秒中内无操作，页面将自动跳转至主页\n  const [count, setCount] = useState(10);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCount((c) => c - 1);\n    }, 1000);\n    // console.log(count);\n    \n    if (count == 0) {\n      navigate(\"/\");\n    }\n    return () => clearInterval(timer);\n  }, [count]);\n\n  // 发送消息\n  const handleSendMessage = (message) => {\n    clientRef.current.publish(passage, message);\n  };\n\n  const { Up, Down, Left, Right, Stop, Lifting, Pitching } = props.message;\n\n  const JoystickDirection = [\"FORWARD\", \"BACKWARD\", \"LEFT\", \"RIGHT\", \"STOP\"];\n\n  const [moveRecords, setMoveRecords] = useState(\"\");\n\n  const handleMove = (e) => {\n    setCount(10);\n    // 判断方向是否跟刚刚的方向相同\n    const direction = e.direction;\n    if (moveRecords !== direction) {\n      if (direction == JoystickDirection[0]) {\n        handleSendMessage(Up);\n      } else if (direction == JoystickDirection[1]) {\n        handleSendMessage(Down);\n      } else if (direction == JoystickDirection[2]) {\n        handleSendMessage(Left);\n      } else if (direction == JoystickDirection[3]) {\n        handleSendMessage(Right);\n      }\n      setMoveRecords(direction);\n    }\n  };\n  const handleStop = () => {\n    setMoveRecords(JoystickDirection[4]);\n    handleSendMessage(Stop);\n  };\n  const joystickStart = () => {};\n  return (\n    <>\n      <button onClick={() => setCount(10)}>{count}</button>\n      <Box>{moveRecords}</Box>\n      <LinearProgress />\n      <Box\n        sx={{\n          height: \"80vh\",\n          justifyContent: \"space-around\",\n          display: \"flex\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n          background: \"lightcoral\",\n        }}\n      >\n        {/* 操纵杆 */}\n        <Box>\n          <Joystick\n            size={150}\n            stickSize={70}\n            sticky={false}\n            baseColor=\"rgb(0, 0, 51,0.2)\"\n            stickColor=\"rgba(133, 37, 60, 0.8)\"\n            move={(eve) => handleMove(eve)}\n            stop={handleStop}\n            start={joystickStart}\n          ></Joystick>\n        </Box>\n\n        <Box sx={{ width: 250 }}>\n          <Button\n            sx={rightButtonStyle}\n            variant=\"outlined\"\n            size=\"large\"\n            fullWidth={true}\n            {...{\n              [start]: () => {\n                handleSendMessage(Lifting);\n                setCount(10);\n              },\n            }}\n            // {...{ [end]: () => handleSendMessage(\"end\") }}\n          >\n            升/降\n          </Button>\n          <Button\n            sx={rightButtonStyle}\n            variant=\"outlined\"\n            size=\"large\"\n            fullWidth={true}\n            {...{\n              [start]: () => {\n                handleSendMessage(Pitching);\n                setCount(10);\n              },\n            }}\n            // {...{ [end]: () => handleSendMessage(\"end\") }}\n          >\n            夹球\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nconst rightButtonStyle = {\n  userSelect: \"none\",\n  mt: 4,\n  mb: 4,\n  // with: 200,\n  fullWidth: true,\n  height: 50,\n};\n\nexport default Car;\n","import Car from \"../../components/Car\";\nimport { url } from \"../../esp32api\";\nimport { LonganCore1 } from \"../../esp32api\";\n\nconst FirstCar = () => {\n  return (\n    <div>\n      FirstCar\n      <Car\n        urlStr={url}\n        passage={LonganCore1.passage}\n        message={LonganCore1.message}\n      />\n    </div>\n  );\n};\n\nexport default FirstCar;\n","import Car from \"../../components/Car\";\nimport { url } from \"../../esp32api\";\nimport { LonganCore2 } from \"../../esp32api\";\n\nconst SecondCar = () => {\n  return (\n    <div>\n      SecondCar\n      <Car\n        urlStr={url}\n        passage={LonganCore2.passage}\n        message={LonganCore2.message}\n      />\n    </div>\n  );\n};\n\nexport default SecondCar;\n","import Car from \"../../components/Car\";\nimport { url } from \"../../esp32api\";\nimport { LonganCore3 } from \"../../esp32api\";\n\nconst ThirdCar = () => {\n  return (\n    <div>\n      ThirdCar\n      <Car\n        urlStr={url}\n        passage={LonganCore3.passage}\n        message={LonganCore3.message}\n      />\n    </div>\n  );\n};\n\nexport default ThirdCar;\n","import { Box } from \"@mui/system\";\nimport Car from \"../../components/Car\";\nimport { url } from \"../../esp32api\";\nimport { LonganCore4 } from \"../../esp32api\";\n\nconst FourthCar = () => {\n  return (\n    <div>\n      FourthCar\n      <Box>\n        <Car\n          urlStr={url}\n          passage={LonganCore4.passage}\n          message={LonganCore4.message}\n        />\n      </Box>\n    </div>\n  );\n};\n\nexport default FourthCar;\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Home_router } from \"../route-constants\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ height: \"10vh\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          AIM ESP32 HOME\r\n        </Button>\r\n      </Box>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home\";\r\nimport FirstCar from \"./pages/Cars/FirstCar\";\r\nimport SecondCar from \"./pages/Cars/SecondCar\";\r\nimport ThirdCar from \"./pages/Cars/ThirdCar\";\r\nimport FourthCar from \"./pages/Cars/FourthCar\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n  Home_router,\r\n  First_car_router,\r\n  Second_car_router,\r\n  Third_car_router,\r\n  Fourth_car_router,\r\n} from \"./route-constants\";\r\n\r\nconst style = {\r\n  borderRadius: \"22px\",\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"70%\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction App() {\r\n  const [open, setOpen] = React.useState(true);\r\n  useEffect(() => {\r\n    //检测屏幕的宽度和高度，来判断屏幕方向\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleOrientationChange = () => {\r\n      if (window.matchMedia(\"(orientation: landscape)\").matches) {\r\n        handleClose();\r\n        console.log(\"Landscape\");\r\n      } else {\r\n        handleOpen();\r\n        console.log(\"Portrait\");\r\n      }\r\n    };\r\n\r\n    handleOrientationChange();\r\n    window.addEventListener(\"orientationchange\", handleOrientationChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"orientationchange\", handleOrientationChange);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        disableAutoFocus={true}\r\n        sx={{ borderRadius: \"22px\", background: \"lightcoral\" }}\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            屏幕应横向展示\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            请在控制中心，设置屏幕为旋转模式，并横向转动，即刻体验\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <Routes>\r\n        <Route index path={`${Home_router}`} element={<Home />} />\r\n        <Route path={`${First_car_router}`} element={<FirstCar />} />\r\n        <Route path={`${Second_car_router}`} element={<SecondCar />} />\r\n        <Route path={`${Third_car_router}`} element={<ThirdCar />} />\r\n        <Route path={`${Fourth_car_router}`} element={<FourthCar />} />\r\n      </Routes>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}